plugins {
    id 'io.jmix' version '1.2.0'
    id 'java'
}

apply plugin: 'org.springframework.boot'

jmix {
    bomVersion = '1.2.2'
    projectId = 'mccs'
}

group = 'io.embraceit'
version = '0.0.1-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        url 'https://nexus.jmix.io/repository/public'
    }
    maven {
        url = 'https://nexus.jmix.io/repository/premium'
        credentials {
            username = rootProject.hasProperty('premiumRepoUser') ? rootProject['premiumRepoUser'] : System.getenv('JMIX_PREMIUM_USER')
            password = rootProject.hasProperty('premiumRepoPass') ? rootProject['premiumRepoPass'] : System.getenv('JMIX_PREMIUM_PASSWORD')
        }
    }
}

dependencies {
    implementation 'io.jmix.core:jmix-core-starter'
    implementation 'io.jmix.data:jmix-eclipselink-starter'
    implementation 'io.jmix.ui:jmix-ui-starter'
    implementation 'io.jmix.ui:jmix-ui-data-starter'
    implementation 'io.jmix.security:jmix-security-starter'
    implementation 'io.jmix.security:jmix-security-ui-starter'
    implementation 'io.jmix.security:jmix-security-data-starter'
    implementation 'io.jmix.localfs:jmix-localfs-starter'
    implementation 'io.jmix.datatools:jmix-datatools-starter'
    implementation 'io.jmix.datatools:jmix-datatools-ui-starter'

    implementation 'org.springframework.boot:spring-boot-starter-web'

//    implementation 'de.diedavids.jmix.wizard:jmix-wizard-starter:1.0.0'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    implementation("org.postgresql:postgresql")
    themes("io.jmix.ui:jmix-ui-themes")
    implementation("io.jmix.ui:jmix-ui-themes")
    implementation("io.jmix.multitenancy:jmix-multitenancy-ui-starter")
    implementation("io.jmix.multitenancy:jmix-multitenancy-starter")
    implementation("io.jmix.audit:jmix-audit-starter")
    implementation("io.jmix.audit:jmix-audit-ui-starter")
    implementation("io.jmix.security:jmix-security-oauth2-starter")
    implementation("io.jmix.rest:jmix-rest-starter")
    implementation("io.jmix.reports:jmix-reports-ui-starter")
    implementation("io.jmix.reports:jmix-reports-starter")
    implementation("io.jmix.reports:jmix-reports-rest-starter")
    widgets("io.jmix.ui:jmix-pivot-table-widgets")
    widgets("io.jmix.ui:jmix-ui-widgets")
    implementation("io.jmix.ui:jmix-pivot-table-starter")
    implementation("io.jmix.dashboards:jmix-dashboards-starter")
    implementation("io.jmix.dashboards:jmix-dashboards-ui-starter")
    implementation("io.jmix.ui:jmix-charts-starter")
    widgets("io.jmix.ui:jmix-charts-widgets")
    implementation("io.jmix.dynattr:jmix-dynattr-ui-starter")
    implementation("io.jmix.dynattr:jmix-dynattr-starter")
    implementation("io.jmix.email:jmix-email-ui-starter")
    implementation("io.jmix.email:jmix-email-starter")
    implementation("io.jmix.ui:jmix-ui-export-starter")
    implementation("io.jmix.appsettings:jmix-appsettings-starter")
    implementation("io.jmix.appsettings:jmix-appsettings-ui-starter")
    implementation("io.jmix.bpm:jmix-bpm-ui-starter")
    implementation("io.jmix.bpm:jmix-bpm-starter")
    implementation("io.jmix.businesscalendar:jmix-businesscalendar-starter")
    implementation("io.jmix.businesscalendar:jmix-businesscalendar-ui-starter")
    implementation("io.jmix.notifications:jmix-notifications-starter")
    implementation("io.jmix.notifications:jmix-notifications-ui-starter")
    implementation("io.jmix.awsfs:jmix-awsfs-starter")
    themes("io.jmix.dashboards:jmix-dashboards-ui")
}

test {
    useJUnitPlatform()
}

compileWidgets {
    generate "io.embraceit.mccsproject.widgets.CustomWidgetSet"
    includePaths("**/io/jmix/**/widget/**", "**/io/embraceit/mccsproject/widgets/**")
}